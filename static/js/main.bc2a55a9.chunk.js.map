{"version":3,"sources":["assets/apple-touch-icon.png","components/ToDoItem.js","App.js","graphql/mutations.js","graphql/queries.js","aws-exports.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ToDoItem","_ref","name","description","isTodoBeingEdited","newDescription","onFinishEdit","onStartEdit","onEditDescription","onDelete","react_default","a","createElement","style","padding","index_es","direction","in","onClick","variant","EditOutlined_default","float","DeleteOutlined_default","OfflineBoltOutlined_default","autoFocus","placeholder","onChange","onBlur","value","fullWidth","createNewTodo","API","graphql","graphqlOperation","input","id","shortid","generate","updateDescription","todo","Object","objectSpread","deleteTodo","getAllTodos","then","response","data","listTodos","items","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","key","event","setState","defineProperty","target","createTodo","finishEdit","newTodo","state","length","isLoading","prevState","todos","concat","toConsumableArray","newTodoDescription","todoBeingEdited","index","todoToDelete","splice","editTodo","_this$state","updateTodo","_this2","_this3","username","authData","AppBar_default","color","position","Toolbar_default","Typography_default","paddingLeft","alt","maxWidth","src","writingIcon","fontSize","Input_default","Button_default","map","i","assign","Component","withAuthenticator","awsmobile","aws_project_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","Boolean","window","location","hostname","match","Amplify","configure","aws_exports","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc2a55a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apple-touch-icon.4ec7d8e7.png\";","import React from 'react';\nimport { CardContent, Slide, Card, Typography, Input } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport OfflineBoltOutlinedIcon from '@material-ui/icons/OfflineBoltOutlined';\n\nexport default ({\n  name,\n  description,\n  isTodoBeingEdited,\n  newDescription,\n  onFinishEdit,\n  onStartEdit,\n  onEditDescription,\n  onDelete\n}) => (\n  <div style={{ padding: 4 }}>\n    <Slide direction=\"right\" in>\n      <Card>\n        <CardContent>\n          <Typography onClick={onFinishEdit} variant=\"subheading\">\n            {name}\n            <EditOutlinedIcon\n              style={{ float: 'right', padding: 4 }}\n              onClick={onStartEdit}\n            />\n            <DeleteOutlinedIcon\n              style={{ float: 'right', padding: 4 }}\n              onClick={onDelete}\n            />\n            {isTodoBeingEdited && (\n              <OfflineBoltOutlinedIcon style={{ float: 'right', padding: 4 }} />\n            )}\n          </Typography>\n          {isTodoBeingEdited ? (\n            <Input\n              autoFocus\n              placeholder=\"Describe your to do...\"\n              onChange={onEditDescription}\n              onBlur={onFinishEdit}\n              value={newDescription}\n              fullWidth\n            />\n          ) : (\n            <Typography onClick={onStartEdit}>\n              {description || 'Description goes here...'}\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Slide>\n  </div>\n);\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport React, { Component } from 'react';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport * as mutations from './graphql/mutations';\nimport shortid from 'shortid';\n\nimport * as queries from './graphql/queries';\n\nimport writingIcon from './assets/apple-touch-icon.png';\nimport ToDoItem from './components/ToDoItem';\n\nconst createNewTodo = name =>\n  API.graphql(\n    graphqlOperation(mutations.createTodo, {\n      input: { id: shortid.generate(), name: name, description: 'N/A' }\n    })\n  );\n\nconst updateDescription = (description, todo) =>\n  API.graphql(\n    graphqlOperation(mutations.updateTodo, { input: { ...todo, description } })\n  );\n\nconst deleteTodo = todo =>\n  API.graphql(\n    graphqlOperation(mutations.deleteTodo, {\n      input: { id: todo.id }\n    })\n  );\n\nconst getAllTodos = () =>\n  API.graphql(graphqlOperation(queries.listTodos)).then(\n    response => response.data.listTodos.items\n  );\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      newTodo: '',\n      newTodoDescription: '',\n      todoBeingEdited: -1,\n      todos: []\n    };\n  }\n  componentWillMount() {\n    getAllTodos().then(response => {\n      this.setState({ todos: response, isLoading: false });\n    });\n  }\n  handleInput = key => event => {\n    this.setState({ [key]: event.target.value });\n  };\n  createTodo = () => {\n    this.finishEdit();\n    const { newTodo } = this.state;\n    if (newTodo.length > 0) {\n      this.setState({ isLoading: true });\n      createNewTodo(newTodo).then(response => {\n        this.setState(prevState => ({\n          todos: [...prevState.todos, response.data.createTodo],\n          newTodo: '',\n          newTodoDescription: '',\n          todoBeingEdited: prevState.todos.length,\n          isLoading: false\n        }));\n      });\n    }\n  };\n  deleteTodo = index => () => {\n    this.finishEdit();\n    const todos = this.state.todos;\n    const todoToDelete = todos.splice(index, 1)[0];\n    this.setState({ isLoading: true });\n    deleteTodo(todoToDelete)\n      .then(getAllTodos)\n      .then(response => {\n        this.setState({ todos: response, isLoading: false });\n      });\n  };\n  editTodo = index => () => {\n    this.finishEdit();\n    this.setState(prevState => ({\n      todoBeingEdited: index,\n      newTodoDescription: prevState.todos[index].description\n    }));\n  };\n  finishEdit = () => {\n    const { todoBeingEdited, todos, newTodoDescription } = this.state;\n    const todo = this.state.todos[todoBeingEdited];\n    if (todoBeingEdited > -1 && todos.length > 0 && todo) {\n      this.setState({ isLoading: true });\n      updateDescription(newTodoDescription, todo).then(response => {\n        todos.splice(todoBeingEdited, 1, response.data.updateTodo);\n        this.setState({ todos, todoBeingEdited: -1, isLoading: false });\n      });\n    }\n  };\n  render() {\n    const {\n      authData: { username }\n    } = this.props;\n    return (\n      <div>\n        <AppBar color=\"default\" position=\"static\">\n          <Toolbar>\n            <Typography variant=\"title\">Material To Do </Typography>\n            <div style={{ paddingLeft: 4 }}>\n              <img alt=\"writing\" style={{ maxWidth: 24 }} src={writingIcon} />\n            </div>\n            &nbsp;\n            <Typography\n              variant=\"display1\"\n              style={{ fontSize: 14, float: 'right' }}\n            >\n              {username}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div style={{ padding: 12 }}>\n          <Input\n            placeholder=\"Go to the store\"\n            onChange={this.handleInput('newTodo')}\n            value={this.state.newTodo}\n            fullWidth\n          />\n        </div>\n        <div style={{ padding: 12 }}>\n          <Button\n            onClick={this.createTodo}\n            fullWidth\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Create\n          </Button>\n        </div>\n        <div style={{ padding: 4 }}>\n          {this.state.todos.map((todo, i) => (\n            <ToDoItem\n              key={i}\n              {...todo}\n              isTodoBeingEdited={this.state.todoBeingEdited === i}\n              newDescription={this.state.newTodoDescription}\n              onStartEdit={this.editTodo(i)}\n              onFinishEdit={this.finishEdit}\n              onEditDescription={this.handleInput('newTodoDescription')}\n              onDelete={this.deleteTodo(i)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuthenticator(App);\n","// eslint-disable\n// this is an auto generated file. This will be overwritten\n\nexport const createTodo = `mutation CreateTodo($input: CreateTodoInput!) {\n  createTodo(input: $input) {\n    id\n    name\n    description\n  }\n}\n`;\nexport const updateTodo = `mutation UpdateTodo($input: UpdateTodoInput!) {\n  updateTodo(input: $input) {\n    id\n    name\n    description\n  }\n}\n`;\nexport const deleteTodo = `mutation DeleteTodo($input: DeleteTodoInput!) {\n  deleteTodo(input: $input) {\n    id\n    name\n    description\n  }\n}\n`;\n","// eslint-disable\n// this is an auto generated file. This will be overwritten\n\nexport const getTodo = `query GetTodo($id: ID!) {\n  getTodo(id: $id) {\n    id\n    name\n    description\n  }\n}\n`;\nexport const listTodos = `query ListTodos(\n  $filter: ModelTodoFilterInput\n  $limit: Int\n  $nextToken: String\n) {\n  listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      name\n      description\n    }\n    nextToken\n  }\n}\n`;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile =  {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:bbad683d-d791-4df7-80d7-4ef017d43e8a\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_wT6d3kjpm\",\n    \"aws_user_pools_web_client_id\": \"7aoq2svspmdj1tulsr94pa2h2j\",\n    \"aws_appsync_graphqlEndpoint\": \"https://xbcczlzx2bazrhr23koqxjvvy4.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-664rt737j5gihpir7yqmfu2ypa\"\n};\n\n\nexport default awsmobile;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport Amplify from 'aws-amplify';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport aws_exports from './aws-exports';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure(aws_exports);\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}